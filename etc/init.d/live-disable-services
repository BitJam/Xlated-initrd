#!/live/bin/sh

### BEGIN INIT INFO
# Provides:          live-disable-services
# Required-Start:    checkfs checkroot-bootclean live-init
# Required-Stop:
# Should-Start:
# Default-Start:     S
# Default-Stop:
# Short-Description: Disable services for LiveCD/USB
# Description:       Temporarily disable services for LiveCD/USB
### END INIT INFO

export PATH=/sbin:/usr/sbin:/bin:/usr/bin:/usr/local/bin

OUT_FILE=/live/config/disabled

VBOX_SERVICES="
virtualbox-guest-utils
virtualbox-guest-x11
"

NFS_SERVICES="
nfs-kernel-server
"

LEAN_SERVICES="
    acpi-fakekey
    acpi-support
    bootlogs
    bluetooth
    #cherokee
    cpufrequtils
    cron
    cups
    gpm
    ifplugd
    irqbalance
    loadcpufreq
    nfs-common
    rpcbind
    rsync
    rsyslog
    saned
    smartmontools
    ssh
    stop-bootlogd
    sudo
    #transmission-daemon
"

LAPTOP_SERVICES="
    acpid
    wicd
"

XTRA_LEAN_SERVICES="
    bootlogd
    cryptdisks
    cryptdisks-early
    dns-clean
    #eeepc-acpi-scripts
    hdparm
    hwclock.sh
    hwclockfirst.sh
    ifupdown-clean
    lm-sensors
    lvm2
    mountnfs-bootclean.sh
    mountoverflowtmp
    nfs-common
    pcmciautils
    policykit
    pppd-dns
    #svgalib-bin
    ufw
    urandom
"

MEAN_SERVICES="
    networking
    network-manager
    ntp
    resolvconf
    smbd
    nfs-kernel-server
    wicd
    avahi-daemon
"

KBD_SERVICES="
console-setup
keyboard-setup
"

NO_DBUS_SERVICES="
    dbus
"

PATH=/live/bin:$PATH

prep_main() {

    case $1 in
        start)          ;;
         stop) exit 0   ;;
            *) echo "Usage: $0 {start|stop}"
               exit 1   ;;
    esac

    local must_run param val
    : ${CMDLINE:=$(cat /live/config/proc-cmdline)}
    for param in $CMDLINE; do
        val=${param#*=}
        case "$param" in
            antiX=*|aX=*) disable_param=$val   ; must_run=true ;;
           disable_srv=*) disable_param=$val   ; must_run=true ;;
                nosysv=*) disable_param=$val   ; must_run=true ;;
       disable_service=*) disable_param=$val   ; must_run=true ;;
               disable=*) disable_param=$val   ; must_run=true ;;
                    lean)        LEAN=true;      must_run=true ;;
                    mean)        MEAN=true;      must_run=true ;;
                Xtralean)   XTRA_LEAN=true;      must_run=true ;;
                  nodbus)     NO_DBUS=true;      must_run=true ;;
                    db++)   DEBUGGING=true                     ;;
        esac
    done

    if test -x /etc/init.d/nfs-kernel-server; then
        DISABLE_NFS=true
        NFS_REASON="no exports"

        local file export_files="/etc/exports"
        for file in /etc/exports.d/*.exports ; do
            [ -f "$file" ] && export_files="$export_files $file"
        done

        [ -f /etc/exports ] && grep -q '^[[:space:]]*[^#]*/' $export_files && DISABLE_NFS=
    fi

    if [ "$disable_param" ]; then

        # If the ## expression matches then the resulting string length is zero
        [ "${disable_param##*[lL]*}" ] ||          LEAN=true
        [ "${disable_param##*[mM]*}" ] ||          MEAN=true
        [ "${disable_param##*[xX]*}" ] ||     XTRA_LEAN=true
        [ "${disable_param##*[dD]*}" ] ||       NO_DBUS=true
        [ "${disable_param##*[vV]*}" ] ||  DISABLE_VBOX=true
        [ "${disable_param##*[nN]*}" ] ||   DISABLE_NFS=true
        [ "${disable_param##*[k]*}"  ] ||      FAST_KBD=true
        [ "${disable_param##*[nN]*}" ] ||    NFS_REASON=n
    fi

    . /live/lib/live-init-utils.sh

    start_init_logging
    load_translation
}

main() {
    # Prevent other messages stepping on ours
    # sleep 2
    echo_script "$_Customizing_services_" $0

    if test -e /etc/init.d/virtualbox-guest-utils; then
        if test -e /live/config/virtualbox; then
            echo_live "$_Enabling_X_services_" "$(pquote Virtual Box)"
            update-rc.d virtualbox-guest-utils defaults
            update-rc.d virtualbox-guest-x11   defaults
        else
            echo_live "$_Disabling_X_services_" "$(pquote Virtual Box)"
            update-rc.d virtualbox-guest-utils remove
            update-rc.d virtualbox-guest-x11   remove
        fi
    fi

    [ -z "$must_run" -o -n "$DISABLE_NFS" ] || exit 0

    if [ "$LEAN" ]; then

        if test -e /live/config/laptop; then
            echo_live "$_Detected_laptop_mobile_device_"
        else
            LEAN_SERVICES="$LEAN_SERVICES $LAPTOP_SERVICES"
        fi

        echo_live "$_Disabling_some_services_X_" "$(paren L, lean)"
        disable_services "lean (l)" "$LEAN_SERVICES"
    fi

    if [ "$DISABLE_VBOX" ]; then
        echo_live "$_Disabling_X_services_Y_" "Virtual Box" "$(paren v)"
        disable_services "vbox (v)" "$VBOX_SERVICES"
    fi

    if [ "$DISABLE_NFS" ]; then
        echo_live "$_Disabling_NFS_server_X_" "$(paren $NFS_REASON)"
        disable_services "nfs (n)" "$NFS_SERVICES"
    fi

    if [ "$MEAN" ]; then
        echo_live "$_Disabling_network_services_X_" "$(paren M, mean)"
        disable_services "mean (m)" "$MEAN_SERVICES"
    fi

    if [ "$XTRA_LEAN" ]; then
        echo_live "$_Disabling_more_services_X_" "$(paren X, Xtralean)"
        disable_services "Xtralean (x)" "$XTRA_LEAN_SERVICES"
    fi

    if [ "$FAST_KBD" ]; then
        echo_live "$_Disabling_keyboard_setup_X_" "$(paren k)"
        disable_services "keyboard (k)" "$KBD_SERVICES"
    fi

    if [ "$NO_DBUS" ]; then
        echo_live "$_Disabling_X_services_Y_" "debus" "$(paren D, nodbus)"
        disable_services "nodbus (d)" "$NO_DBUS_SERVICES"
    fi

    [ "$OUT" ] && echo "$OUT" | tr "," "\n" > $OUT_FILE
}


#----------------------------------------------------------------------------
# function disable_services "$name" "$services" [ "$rc_dirs" ]
#
# Temporarily disable services at boot-time by moving their /etc/rc?.d/
# symlinks.  See also live-restore-services which is the script
# that returns them to their proper place at the end of initialization.
#
# Move service symlinks out of various runlevels and into the matching
# /etc/antiX-live/rc?.d  directory.
#
# If no rc_dirs are given then rc?.d is used.
#----------------------------------------------------------------------------

disable_services() {

    local name=$1 services="$2" rc_dirs="${3:-rc?.d}"

    local rc_dir dest service slink moved length

    for rc_dir in /etc/$rc_dirs; do

        dest=/live/config/disabled-rc.d/${rc_dir#/etc/}
        mkdir -p $dest

        local out
        for service in $services; do
            [ -z "${service###*}" ]  && continue
            for slink in /$rc_dir/S*$service; do
                [ -e "$slink" ] || continue
                mv -f $slink $dest

                # Only print out each service once
                case ",$moved," in
                    *,$service,*) continue ;;
                esac

                moved="$moved,$service"
            done
        done
    done

    OUT="$OUT${OUT:+,,}#----- $name -----$moved"

    [ "$DEBUGGING" ] || return

    local unused
    for service in $services; do
        case ",$moved," in
            *,$service,*) continue ;;
        esac
        unused="$unused $service"
    done
    [ "$unused" ] && echo_live '  Unused: %s' "$AMBER$unused"
}

prep_main "$@"
main  2>&1 | tee -a $INIT_LOG_FILE

exit 0

